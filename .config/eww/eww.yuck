(defpoll time :interval "5s"
  :initial `date +'{"hour":"%H","min":"%M"}'`
  `date +'{"hour":"%H","min":"%M"}'`)

(defpoll net :interval "100s"
  :initial `N\A`
  `nmcli -t -f SIGNAL,ACTIVE device wifi \
    |awk -F':' '{if($2=="yes")print$1}'`)

(defwidget _buttons [shutdown shutdown_icon reboot reboot_icon logout logout_icon]
  (box  :class "btns-box" :spacing 5
        :vexpand true :hexpand true
        :valign "end" :halign "end"
        :space-evenly false
    (button :onclick shutdown shutdown_icon)
    (button :onclick reboot reboot_icon)
    (button :onclick logout logout_icon)))

(defwidget _network [strength offline excellent good okay slow very_slow]
  (box  :class "net-box"
        :space-evenly false
        :spacing 8
    (label :text {strength == "" ? offline :
      strength <= 20 ? very_slow :
        strength <= 40 ? slow :
          strength <= 60 ? okay :
            strength <= 80 ? good : excellent})))

(defwidget _battery [battery status zero  one  two  three  four  five  six  seven  eight  nine  ten
                                   czero cone ctwo cthree cfour cfive csix cseven ceight cnine cten]
  (box :class "bat-box" :space-evenly false :spacing 8
    (label :text {status == 'Charging' ?
    (battery < 10 ? czero :
        battery < 20 ? cone :
          battery < 30 ? ctwo :
            battery < 40 ? cthree :
              battery < 50 ? cfour :
                battery < 60 ? cfive :
                  battery < 70 ? csix :
                    battery < 80 ? cseven :
                      battery < 90 ? ceight :
                        battery < 100 ? cnine : cten) :
      (battery < 10 ? zero :
        battery < 20 ? one :
          battery < 30 ? two :
            battery < 40 ? three :
              battery < 50 ? four :
                battery < 60 ? five :
                  battery < 70 ? six :
                    battery < 80 ? seven :
                      battery < 90 ? eight :
                        battery < 100 ? nine : ten) })))

(defwidget _sundial []
  (label  :class "sundial-lbl" :halign "end" :hexpand true
          :text { time.hour >= 2 && time.hour < 5 ? "Early Morning" :
                  time.hour < 6 ? "Dawn" :
                  time.hour < 9 ? "Morning" :
                  time.hour < 12 ? "Late Morning" :
                  time.hour == 12 && time.min <= 29 ? "Midday" :
                  time.hour < 15 ? "Afternoon" :
                  time.hour < 17 ? "Late Afternoon" :
                  time.hour < 18 ? "Early Evening" :
                  time.hour < 20 ? "Dusk" :
                  time.hour < 22 ? "Late Evening" :
                  time.hour > 21 ? "Night" :
                  time.hour < 1 ? "Midnight" : "Late Night"}))

(defwidget powermenu_layout []
  (box  :class "layout-box" :space-evenly false :orientation "vertical"
        :style "background-image: url('./wallpaper.png')"
    (box :valign "start" :space-evenly false :spacing 25
      (_sundial)
      (_battery :status {EWW_BATTERY.BAT0.status}
                :battery {EWW_BATTERY.BAT0.capacity}
                :zero "󰂎" :one "󰁺" :two "󰁻" :three "󰁼" :four "󰁽"
                :five "󰁾" :six "󰁿" :seven "󰂀" :eight "󰂁" :nine "󰂂" :ten "󰁹"
                :czero "󰢟 " :cone "󰢜 " :ctwo "󰂆 " :cthree "󰂇 " :cfour "󰂈 "
                :cfive "󰢝 " :csix "󰂉 " :cseven "󰢞 " :ceight "󰂊 " :cnine "󰂋 " :cten "󰂅 ")
      (_network :strength net :offline "󰣵 " :excellent "󰣺 " :good "󰣸 "
                :okay "󰣶 " :slow "󰣴 " :very_slow "󰣾 ")
      (label :text "|" :class "sep")
      (button :onclick "eww close powermenu" :class "close-btn" " "))
    (box :space-evenly false :hexpand true :vexpand true
      (box :spacing 15 :class "tm-box" :space-evenly false :valign "end"
           :halign "start"
        (label :text " ")
        (label :text "${time.hour} ${time.min}"))
      (_buttons :shutdown "poweroff" :reboot "reboot"
                :logout "loginctl kill-session self"
                :shutdown_icon "" :reboot_icon "" :logout_icon "󰗽 "))))

(defwindow powermenu
  :monitor 1
  :stacking "fg"
  :windowtype "normal"
  :wm-ignore true
  :geometry (geometry :width "100%" :height "100%")
  (powermenu_layout))

